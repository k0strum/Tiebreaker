# 개발 환경 설정
spring.application.name=Tiebreaker

# Docker Compose 환경에서 localhost 대신 컨테이너명(db)으로 연결
spring.datasource.url=jdbc:mysql://db:3306/tiebreak_db?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=user
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# JWT Settings
jwt.secret=I1Byb2plY3RfbmFtZV9UaWVicmVha2VyX2tleV9vZl9zZWNyZXRfZm9yX0pXVCM=
jwt.validity=3600000

# Frontend URL
app.frontend-url=http://localhost:5173

# Email Settings(Gmail)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=k0strumm@gmail.com
spring.mail.password=setqhxbxcmkjjhti
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# === Social Login ===
# Google
spring.security.oauth2.client.registration.google.client-id=861217728721-if9alpj7ino2q9hel6vl1v6v0jmc9fma.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google

# Naver
spring.security.oauth2.client.registration.naver.client-id=Lv7lJjn85PLVChCtLXb9
spring.security.oauth2.client.registration.naver.client-secret=FOBB6yeQ7Z
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.scope=nickname,email,profile_image
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Kakao
spring.security.oauth2.client.registration.kakao.client-id=823c5ec123e09581d0bfbcbd72a72220
spring.security.oauth2.client.registration.kakao.client-secret=rFBHPWz5XKLn7O0Kpm18xCq2iYhC5NMv~
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email,profile_image
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# DevTools 설정
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.restart.additional-paths=src/main/java
spring.devtools.restart.exclude=static/**,public/**,templates/**

# 로깅 설정
logging.level.com.k0strum.Tiebreaker=DEBUG
logging.level.org.springframework.web=DEBUG

# Actuator 설정
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always