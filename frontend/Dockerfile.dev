# 개발용 Dockerfile - 실시간 코드 반영
FROM node:18-alpine

# 작업 디렉토리 설정
WORKDIR /app

# Node.js 메모리 제한 설정 (메모리 부족으로 인한 SIGTERM 방지)
ENV NODE_OPTIONS="--max-old-space-size=4096"

# 시스템 패키지 업데이트 및 필요한 도구 설치
RUN apk update && apk add --no-cache \
  git \
  python3 \
  make \
  g++ \
  curl \
  && rm -rf /var/cache/apk/*

# package.json 복사 및 의존성 설치
COPY package*.json ./
RUN npm ci --only=production=false

# 소스 코드는 볼륨으로 마운트되므로 복사하지 않음
# COPY . .

# 사용자 권한 설정 (보안 강화)
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001
RUN chown -R nextjs:nodejs /app
USER nextjs

# 개발 서버 실행 (핫 리로드 활성화)
EXPOSE 5173

# 헬스체크 추가
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:5173/ || exit 1

# 더 안정적인 프로세스 관리
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "5173", "--force"] 